---
- name: Installing and Configuring Kubernetes Cluster For Worker Nodes
  hosts: tag_Type_Workers
  become: yes
  gather_facts: true

  tasks:
    - name: Prerequstites of Kubernetes Cluster for Ubuntu
      shell: |
        swapoff -av
        sed -i '/\bswap\b/ s/^/#/' /etc/fstab
        ufw disable
        touch /etc/modules-load.d/99-istio-modules.conf
        cat << EOF > /etc/modules-load.d/99-istio-modules.conf
        # These modules need to be loaded on boot so that Istio (as required by Kubeflow) runs properly.
        # See also: https://github.com/istio/istio/issues/23009

        br_netfilter
        nf_nat
        xt_REDIRECT
        xt_owner
        iptable_nat
        iptable_mangle
        iptable_filter
        EOF
        #### Containerd Modules ####
        cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
        overlay
        br_netfilter
        EOF
      when: ansible_facts['os_family'] == "Debian"
      tags: "2"

    - name: Prequest completed rebooting Server and after continue task
      shell: reboot
      async: 1
      poll: 0
      tags: "3"

    - name: Waiting for server back online
      wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 5
        timeout: 300
      tags: "4"

    - name: Adding Docker & K8s repo for Ubuntu
      shell: |
        apt update -y
        apt install apt-transport-https ca-certificates curl software-properties-common -y
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
        apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"
        apt update -y
      when: ansible_facts['os_family'] == "Debian"
      tags: "5"

    - name: Exclude Conflict Version Of Kubelet
      shell: |
        echo 'exclude=kubelet-1.18.4-0 kubelet-1.17.7-0 kubelet-1.16.11-0' >> /etc/yum.conf
      tags: "6"

    - name: Installing Kubernetes and Container runtime packages for Ubuntu
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - containerd
        - kubeadm
        - kubelet
      when: ansible_facts['os_family'] == "Debian"
      tags: "10"

    - name: Kubernetes and containerd service starting for Ubuntu
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - containerd
        - kubelet
      when: ansible_facts['os_family'] == "Debian"
      tags: "12"

    - name: Configuring Containerd
      shell: |
        modprobe overlay
        modprobe br_netfilter
        cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
         net.bridge.bridge-nf-call-iptables = 1
         net.ipv4.ip_forward = 1
         net.bridge.bridge-nf-call-ip6tables = 1
        EOF
        sysctl â€“system
        mkdir -p /etc/containerd
        containerd config default | sudo tee /etc/containerd/config.toml
        sed -i 's/disabled_plugins/#disabled_plugins/g' /etc/containerd/config.toml
        cat << EOF > /etc/crictl.yaml
         runtime-endpoint: unix:///run/containerd/containerd.sock
         image-endpoint: unix:///run/containerd/containerd.sock
         timeout: 2
         debug: true
         pull-image-on-create: false
         disable-pull-on-run: false
        EOF
        systemctl enable containerd
        systemctl restart containerd
      tags: "13"

    - name: ensure net.bridge.bridge-nf-call-ip6tables is set to 1
      sysctl:
        name: net.bridge.bridge-nf-call-ip6tables
        value: 1
        state: present

    - name: ensure net.bridge.bridge-nf-call-iptables is set to 1
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        state: present

    - name: ensure net.ipv4.ip_forward
      sysctl:
        name: net.ipv4.ip_forward
        value: 1
        state: present

    - name: Joining worker nodes to Kubernetes Master using API token
      shell: |
        sudo sh /home/ubuntu/joincluster.sh
      tags: "14"

- hosts: k8snodes

  tasks:
    - debug:
        msg: Kubernetes Worker Configured Successfully ensure node is connected to master
      tags: "16"
